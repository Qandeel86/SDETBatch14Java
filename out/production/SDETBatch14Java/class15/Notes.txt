Why we should exclude packages and class from compiling:
    In intellij if we have a syntax error in any of the file in a project we cant run
    another file unless and until we fix that error. sometimes we want to execute
    code in some files without fixing those issues this is where we should use exclude
How to Exclude packages:
    Double-click the shift button twice quickly and type exclude and hit enter
    from the pop-up window click on the plus button and select the packages that you
    want to exclude
How Java code is compiled/executed on a computer:
    We write the code in files with extension .java
    once we hit the run button a software program called compiler checks this code for errors
    and converts it to byte code. usually stored in a folder called bin/out.
    JVM another software further converts this code to binary code and this binary code
    is what is executed on your computers.
Methods in Java:
    Method is a block of code, or some Java statements grouped together.
Why we should learn about the methods:
    Methods help us reduce the amount of code that we have to write. For example if a piece of code
    is being repeated, we can create a method for it and simply call that method
    whenever we need that logic again.
Syntax of creating a method:
    we can create methods only inside a class.
    [dataType] [methodName] [(dataType variableName)] [method body]
    [dataType] can be: void,boolean,String,int, etc...
    [methodName] are like variable names.
    [(dataType variableName)] used to pass data while calling a method.
How do we decide that we should use void or a method with a return keyword:
    If we are building a method that will be used by others or in other parts of your code which
    require some data from your method like an if condition we should not create methods with void
    type
    Example:
    String str="hello";
        int length=str.length();
        if(!str.isEmpty()&&length%2!=0&&length>=3{

            int middleIndex=length/2;
            System.out.println(str.charAt(middleIndex));
        }